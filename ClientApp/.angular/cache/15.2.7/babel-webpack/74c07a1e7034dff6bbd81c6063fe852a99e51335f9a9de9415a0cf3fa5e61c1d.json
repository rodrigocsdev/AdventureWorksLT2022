{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet ProductComponent = class ProductComponent {\n  constructor(productService) {\n    this.productService = productService;\n    this.products = []; // Array de produtos\n    this.loading = false; // Indicador de carregamento\n    this.errorMessage = null; // Mensagem de erro (se houver)\n  }\n\n  fetchProducts() {\n    this.loading = true;\n    this.errorMessage = null;\n    this.productService.getProducts().subscribe({\n      next: data => {\n        console.log('Dados recebidos da API:', data);\n        // Verifica se a resposta é um array ou um único produto\n        if (Array.isArray(data)) {\n          this.products = data; // Se for um array, atribui diretamente\n        } else if (data && data.productID) {\n          this.products = [data]; // Se for um único produto, coloca dentro de um array\n        } else {\n          console.error('Estrutura inesperada dos dados:', data);\n          this.products = []; // Garante que é um array vazio em caso de erro\n        }\n\n        this.loading = false;\n      },\n      error: error => {\n        console.error('Erro ao buscar produtos:', error);\n        this.errorMessage = 'Erro ao carregar produtos.';\n        this.loading = false;\n      }\n    });\n  }\n  // Chamado quando o componente é inicializado\n  ngOnInit() {\n    console.log('Componente Home carregado');\n    this.fetchProducts(); // Inicia a busca de produtos\n  }\n};\n\nProductComponent = __decorate([Component({\n  selector: 'app-product',\n  templateUrl: './product.component.html',\n  styleUrls: ['./product.component.css']\n})], ProductComponent);\nexport { ProductComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAS1C,IAAMC,gBAAgB,GAAtB,MAAMA,gBAAgB;EAK3BC,YAAoBC,cAA8B;IAA9B,mBAAc,GAAdA,cAAc;IAJlC,aAAQ,GAAc,EAAE,CAAC,CAAC;IAC1B,YAAO,GAAG,KAAK,CAAC,CAAC;IACjB,iBAAY,GAAkB,IAAI,CAAC,CAAC;EAEkB;;EAEtDC,aAAa;IACX,IAAI,CAACC,OAAO,GAAG,IAAI;IACnB,IAAI,CAACC,YAAY,GAAG,IAAI;IAExB,IAAI,CAACH,cAAc,CAACI,WAAW,EAAE,CAACC,SAAS,CAAC;MAC1CC,IAAI,EAAGC,IAAS,IAAI;QAClBC,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEF,IAAI,CAAC;QAE5C;QACA,IAAIG,KAAK,CAACC,OAAO,CAACJ,IAAI,CAAC,EAAE;UACvB,IAAI,CAACK,QAAQ,GAAGL,IAAI,CAAC,CAAC;SACvB,MAAM,IAAIA,IAAI,IAAIA,IAAI,CAACM,SAAS,EAAE;UACjC,IAAI,CAACD,QAAQ,GAAG,CAACL,IAAI,CAAC,CAAC,CAAC;SACzB,MAAM;UACLC,OAAO,CAACM,KAAK,CAAC,iCAAiC,EAAEP,IAAI,CAAC;UACtD,IAAI,CAACK,QAAQ,GAAG,EAAE,CAAC,CAAC;;;QAEtB,IAAI,CAACV,OAAO,GAAG,KAAK;MACtB,CAAC;MACDY,KAAK,EAAGA,KAAK,IAAI;QACfN,OAAO,CAACM,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;QAChD,IAAI,CAACX,YAAY,GAAG,4BAA4B;QAChD,IAAI,CAACD,OAAO,GAAG,KAAK;MACtB;KACD,CAAC;EACJ;EAEA;EACAa,QAAQ;IACNP,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC;IACxC,IAAI,CAACR,aAAa,EAAE,CAAC,CAAC;EACxB;CACD;;AAvCYH,gBAAgB,eAL5BD,SAAS,CAAC;EACTmB,QAAQ,EAAE,aAAa;EACvBC,WAAW,EAAE,0BAA0B;EACvCC,SAAS,EAAE,CAAC,yBAAyB;CACtC,CAAC,GACWpB,gBAAgB,CAuC5B;SAvCYA,gBAAgB","names":["Component","ProductComponent","constructor","productService","fetchProducts","loading","errorMessage","getProducts","subscribe","next","data","console","log","Array","isArray","products","productID","error","ngOnInit","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\rodri\\source\\repos\\AdventureWorksLT2022\\ClientApp\\src\\app\\product\\product.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { ProductService } from '../service/product.service';\r\nimport { Product } from '../models/product.model';\r\n\r\n@Component({\r\n  selector: 'app-product',\r\n  templateUrl: './product.component.html',\r\n  styleUrls: ['./product.component.css']\r\n})\r\nexport class ProductComponent implements OnInit {\r\n  products: Product[] = []; // Array de produtos\r\n  loading = false; // Indicador de carregamento\r\n  errorMessage: string | null = null; // Mensagem de erro (se houver)\r\n\r\n  constructor(private productService: ProductService) { }\r\n\r\n  fetchProducts(): void {\r\n    this.loading = true;\r\n    this.errorMessage = null;\r\n\r\n    this.productService.getProducts().subscribe({\r\n      next: (data: any) => {\r\n        console.log('Dados recebidos da API:', data);\r\n\r\n        // Verifica se a resposta é um array ou um único produto\r\n        if (Array.isArray(data)) {\r\n          this.products = data; // Se for um array, atribui diretamente\r\n        } else if (data && data.productID) {\r\n          this.products = [data]; // Se for um único produto, coloca dentro de um array\r\n        } else {\r\n          console.error('Estrutura inesperada dos dados:', data);\r\n          this.products = []; // Garante que é um array vazio em caso de erro\r\n        }\r\n        this.loading = false;\r\n      },\r\n      error: (error) => {\r\n        console.error('Erro ao buscar produtos:', error);\r\n        this.errorMessage = 'Erro ao carregar produtos.';\r\n        this.loading = false;\r\n      },\r\n    });\r\n  }\r\n\r\n  // Chamado quando o componente é inicializado\r\n  ngOnInit(): void {\r\n    console.log('Componente Home carregado');\r\n    this.fetchProducts(); // Inicia a busca de produtos\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}