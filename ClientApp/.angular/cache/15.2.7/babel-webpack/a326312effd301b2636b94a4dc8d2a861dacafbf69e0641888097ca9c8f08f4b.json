{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../service/product.service\";\nimport * as i2 from \"@angular/common\";\nfunction HomeComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"A carregar produtos...\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction HomeComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 2);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r1.errorMessage);\n  }\n}\nfunction HomeComponent_ul_2_li_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"currency\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const product_r4 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\" \", product_r4.Name, \" - \", i0.ɵɵpipeBind1(2, 2, product_r4.ListPrice), \" \");\n  }\n}\nfunction HomeComponent_ul_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ul\");\n    i0.ɵɵtemplate(1, HomeComponent_ul_2_li_1_Template, 3, 4, \"li\", 3);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.products);\n  }\n}\nexport class HomeComponent {\n  constructor(productService) {\n    this.productService = productService;\n    this.products = []; // Array de produtos\n    this.loading = false; // Indicador de carregamento\n    this.errorMessage = null; // Mensagem de erro (se houver)\n  }\n  // Método para buscar produtos da API\n  fetchProducts() {\n    this.loading = true; // Ativa o indicador de carregamento\n    this.errorMessage = null; // Reseta a mensagem de erro\n    this.productService.getProducts().subscribe({\n      next: data => {\n        this.products = data; // Preenche o array de produtos com os dados recebidos\n        this.loading = false; // Desativa o indicador de carregamento\n      },\n\n      error: error => {\n        console.error('Erro ao buscar produtos:', error);\n        this.errorMessage = 'Não foi possível carregar os produtos. Tente novamente mais tarde.';\n        this.loading = false; // Desativa o indicador de carregamento mesmo em caso de erro\n      }\n    });\n  }\n  // Chamado quando o componente é inicializado\n  ngOnInit() {\n    console.log('Componente Home carregado');\n    this.fetchProducts(); // Inicia a busca de produtos\n  }\n}\n\nHomeComponent.ɵfac = function HomeComponent_Factory(t) {\n  return new (t || HomeComponent)(i0.ɵɵdirectiveInject(i1.ProductService));\n};\nHomeComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: HomeComponent,\n  selectors: [[\"app-home\"]],\n  decls: 3,\n  vars: 3,\n  consts: [[4, \"ngIf\"], [\"class\", \"error\", 4, \"ngIf\"], [1, \"error\"], [4, \"ngFor\", \"ngForOf\"]],\n  template: function HomeComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, HomeComponent_div_0_Template, 2, 0, \"div\", 0);\n      i0.ɵɵtemplate(1, HomeComponent_div_1_Template, 2, 1, \"div\", 1);\n      i0.ɵɵtemplate(2, HomeComponent_ul_2_Template, 2, 1, \"ul\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.loading);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.errorMessage);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.loading && !ctx.errorMessage);\n    }\n  },\n  dependencies: [i2.NgForOf, i2.NgIf, i2.CurrencyPipe],\n  encapsulation: 2\n});","map":{"version":3,"mappings":";;;;;IAAAA,2BAAqB;IAAAA,sCAAsB;IAAAA,iBAAM;;;;;IACjDA,8BAAwC;IAAAA,YAAkB;IAAAA,iBAAM;;;;IAAxBA,eAAkB;IAAlBA,yCAAkB;;;;;IAEtDA,0BAAqC;IACjCA,YACJ;;IAAAA,iBAAK;;;;IADDA,eACJ;IADIA,mGACJ;;;;;IAHJA,0BAAsC;IAClCA,iEAEK;IACTA,iBAAK;;;;IAHuBA,eAAW;IAAXA,yCAAW;;;ACKvC,OAAM,MAAOC,aAAa;EAKxBC,YAAoBC,cAA8B;IAA9B,mBAAc,GAAdA,cAAc;IAJlC,aAAQ,GAAc,EAAE,CAAC,CAAC;IAC1B,YAAO,GAAG,KAAK,CAAC,CAAC;IACjB,iBAAY,GAAkB,IAAI,CAAC,CAAC;EAEkB;EAEtD;EACAC,aAAa;IACX,IAAI,CAACC,OAAO,GAAG,IAAI,CAAC,CAAC;IACrB,IAAI,CAACC,YAAY,GAAG,IAAI,CAAC,CAAC;IAE1B,IAAI,CAACH,cAAc,CAACI,WAAW,EAAE,CAACC,SAAS,CAAC;MAC1CC,IAAI,EAAGC,IAAe,IAAI;QACxB,IAAI,CAACC,QAAQ,GAAGD,IAAI,CAAC,CAAC;QACtB,IAAI,CAACL,OAAO,GAAG,KAAK,CAAC,CAAC;MACxB,CAAC;;MACDO,KAAK,EAAGA,KAAK,IAAI;QACfC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;QAChD,IAAI,CAACN,YAAY,GAAG,oEAAoE;QACxF,IAAI,CAACD,OAAO,GAAG,KAAK,CAAC,CAAC;MACxB;KACD,CAAC;EACJ;EAEA;EACAS,QAAQ;IACND,OAAO,CAACE,GAAG,CAAC,2BAA2B,CAAC;IACxC,IAAI,CAACX,aAAa,EAAE,CAAC,CAAC;EACxB;;;AA7BWH,aAAa;mBAAbA,aAAa;AAAA;AAAbA,aAAa;QAAbA,aAAa;EAAAe;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDR1BpB,8DAAiD;MACjDA,8DAAgE;MAChEA,4DAIK;;;MANCA,kCAAa;MACbA,eAAkB;MAAlBA,uCAAkB;MACnBA,eAA+B;MAA/BA,wDAA+B","names":["i0","HomeComponent","constructor","productService","fetchProducts","loading","errorMessage","getProducts","subscribe","next","data","products","error","console","ngOnInit","log","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\rodri\\source\\repos\\AdventureWorksLT2022\\ClientApp\\src\\app\\home\\home.component.html","C:\\Users\\rodri\\source\\repos\\AdventureWorksLT2022\\ClientApp\\src\\app\\home\\home.component.ts"],"sourcesContent":["<div *ngIf=\"loading\">A carregar produtos...</div>\r\n<div *ngIf=\"errorMessage\" class=\"error\">{{ errorMessage }}</div>\r\n<ul *ngIf=\"!loading && !errorMessage\">\r\n    <li *ngFor=\"let product of products\">\r\n        {{ product.Name }} - {{ product.ListPrice | currency }}\r\n    </li>\r\n</ul>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ProductService } from '../service/product.service';\r\nimport { Product } from '../models/product.model';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n})\r\nexport class HomeComponent implements OnInit {\r\n  products: Product[] = []; // Array de produtos\r\n  loading = false; // Indicador de carregamento\r\n  errorMessage: string | null = null; // Mensagem de erro (se houver)\r\n\r\n  constructor(private productService: ProductService) { }\r\n\r\n  // Método para buscar produtos da API\r\n  fetchProducts(): void {\r\n    this.loading = true; // Ativa o indicador de carregamento\r\n    this.errorMessage = null; // Reseta a mensagem de erro\r\n\r\n    this.productService.getProducts().subscribe({\r\n      next: (data: Product[]) => {\r\n        this.products = data; // Preenche o array de produtos com os dados recebidos\r\n        this.loading = false; // Desativa o indicador de carregamento\r\n      },\r\n      error: (error) => {\r\n        console.error('Erro ao buscar produtos:', error);\r\n        this.errorMessage = 'Não foi possível carregar os produtos. Tente novamente mais tarde.';\r\n        this.loading = false; // Desativa o indicador de carregamento mesmo em caso de erro\r\n      },\r\n    });\r\n  }\r\n\r\n  // Chamado quando o componente é inicializado\r\n  ngOnInit(): void {\r\n    console.log('Componente Home carregado');\r\n    this.fetchProducts(); // Inicia a busca de produtos\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}