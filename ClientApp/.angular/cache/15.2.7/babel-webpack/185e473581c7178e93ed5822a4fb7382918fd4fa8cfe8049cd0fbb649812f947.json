{"ast":null,"code":"import { catchError } from 'rxjs';\nimport { environment } from '../../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ProductService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = environment.api;\n  }\n  // Método para obter os produtos\n  getProducts() {\n    return this.http.get(this.apiUrl).pipe(catchError(error => {\n      console.error('Erro ao obter produtos', error);\n      throw error; // ou você pode retornar um valor padrão ou mensagem de erro\n    }));\n  }\n}\n\nProductService.ɵfac = function ProductService_Factory(t) {\n  return new (t || ProductService)(i0.ɵɵinject(i1.HttpClient));\n};\nProductService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ProductService,\n  factory: ProductService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAEA,SAAqBA,UAAU,QAAQ,MAAM;AAE7C,SAASC,WAAW,QAAQ,gCAAgC;;;AAK5D,OAAM,MAAOC,cAAc;EAGzBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFhB,WAAM,GAAGH,WAAW,CAACI,GAAG;EAEQ;EAExC;EACAC,WAAW;IACT,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAY,IAAI,CAACC,MAAM,CAAC,CAACC,IAAI,CAC/CT,UAAU,CAAEU,KAAK,IAAI;MACnBC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAC9C,MAAMA,KAAK,CAAC,CAAE;IAChB,CAAC,CAAC,CACH;EACH;;;AAbWR,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;SAAdA,cAAc;EAAAU,SAAdV,cAAc;EAAAW,YAFb;AAAM","names":["catchError","environment","ProductService","constructor","http","api","getProducts","get","apiUrl","pipe","error","console","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\rodri\\source\\repos\\AdventureWorksLT2022\\ClientApp\\src\\app\\service\\product.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable, catchError } from 'rxjs';\r\nimport { Product } from '../models/product.model';  // Certifique-se de que o caminho está correto\r\nimport { environment } from '../../environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ProductService {\r\n  private apiUrl = environment.api;\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  // Método para obter os produtos\r\n  getProducts(): Observable<Product[]> {\r\n    return this.http.get<Product[]>(this.apiUrl).pipe(\r\n      catchError((error) => {\r\n        console.error('Erro ao obter produtos', error);\r\n        throw error;  // ou você pode retornar um valor padrão ou mensagem de erro\r\n      })\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}